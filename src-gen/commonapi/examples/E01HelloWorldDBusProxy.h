/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 2.1.6.v20140519.
* Used org.franca.core 0.8.11.201401091023.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef COMMONAPI_EXAMPLES_E01_Hello_World_DBUS_PROXY_H_
#define COMMONAPI_EXAMPLES_E01_Hello_World_DBUS_PROXY_H_

#include <commonapi/examples/E01HelloWorldProxyBase.h>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusFactory.h>
#include <CommonAPI/DBus/DBusProxy.h>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace commonapi {
namespace examples {

class E01HelloWorldDBusProxy: virtual public E01HelloWorldProxyBase, virtual public CommonAPI::DBus::DBusProxy {
 public:
    E01HelloWorldDBusProxy(
                    const std::shared_ptr<CommonAPI::DBus::DBusFactory>& factory,
                    const std::string& commonApiAddress,
                    const std::string& interfaceName,
                    const std::string& busName,
                    const std::string& objectPath,
                    const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection>& dbusProxyconnection);

    virtual ~E01HelloWorldDBusProxy() { }



    virtual void sayHello(const std::string& name, const int32_t& size, CommonAPI::CallStatus& callStatus, std::string& message);
    virtual std::future<CommonAPI::CallStatus> sayHelloAsync(const std::string& name, const int32_t& size, SayHelloAsyncCallback callback);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

 private:


};



} // namespace examples
} // namespace commonapi

#endif // COMMONAPI_EXAMPLES_E01_Hello_World_DBUS_PROXY_H_

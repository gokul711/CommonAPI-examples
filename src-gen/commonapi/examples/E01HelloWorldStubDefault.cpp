/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 2.1.6.v20140519.
* Used org.franca.core 0.8.11.201401091023.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <commonapi/examples/E01HelloWorldStubDefault.h>

namespace commonapi {
namespace examples {

E01HelloWorldStubDefault::E01HelloWorldStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(E01HelloWorld::getInterfaceVersion()) {
}

const CommonAPI::Version& E01HelloWorldStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> clientId) {
    return interfaceVersion_;
}

E01HelloWorldStubRemoteEvent* E01HelloWorldStubDefault::initStubAdapter(const std::shared_ptr<E01HelloWorldStubAdapter>& stubAdapter) {
    CommonAPI::Stub<E01HelloWorldStubAdapter, E01HelloWorldStubRemoteEvent>::stubAdapter_ = stubAdapter;
    return &remoteEventHandler_;
}


void E01HelloWorldStubDefault::sayHello(const std::shared_ptr<CommonAPI::ClientId> clientId, std::string name, int32_t size, std::string& message) {
    // Call old style methods in default 
    sayHello(name, size, message);
}
void E01HelloWorldStubDefault::sayHello(std::string name, int32_t size, std::string& message) {
    // No operation in default
}




E01HelloWorldStubDefault::RemoteEventHandler::RemoteEventHandler(E01HelloWorldStubDefault* defaultStub):
        defaultStub_(defaultStub) {
}

} // namespace examples
} // namespace commonapi

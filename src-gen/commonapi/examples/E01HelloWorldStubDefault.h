/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 2.1.6.v20140519.
* Used org.franca.core 0.8.11.201401091023.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef COMMONAPI_EXAMPLES_E01_Hello_World_STUB_DEFAULT_H_
#define COMMONAPI_EXAMPLES_E01_Hello_World_STUB_DEFAULT_H_


#include <commonapi/examples/E01HelloWorldStub.h>
#include <sstream>

namespace commonapi {
namespace examples {

/**
 * Provides a default implementation for E01HelloWorldStubRemoteEvent and
 * E01HelloWorldStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class E01HelloWorldStubDefault : public virtual E01HelloWorldStub {
public:
    E01HelloWorldStubDefault();

    E01HelloWorldStubRemoteEvent* initStubAdapter(const std::shared_ptr<E01HelloWorldStubAdapter>& stubAdapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> clientId);


    virtual void sayHello(const std::shared_ptr<CommonAPI::ClientId> clientId, std::string name, int32_t size, std::string& message);
    virtual void sayHello(std::string name, int32_t size, std::string& message);




protected:
    class RemoteEventHandler: public virtual E01HelloWorldStubRemoteEvent {
     public:
        RemoteEventHandler(E01HelloWorldStubDefault* defaultStub);


     private:
        E01HelloWorldStubDefault* defaultStub_;
    };
private:
    E01HelloWorldStubDefault::RemoteEventHandler remoteEventHandler_;


    CommonAPI::Version interfaceVersion_;
};

} // namespace examples
} // namespace commonapi

#endif // COMMONAPI_EXAMPLES_E01_Hello_World_STUB_DEFAULT_H_
